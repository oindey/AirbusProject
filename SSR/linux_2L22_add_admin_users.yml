---
- name: Playbook check if host exists in inventory
  gather_facts: false
  hosts: localhost

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']" 
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED: This target host {{ HOSTS }} does not exist in the Ansible Tower Inventory 2L22"
        failed_when: True

- name: Playbook check if host is Linux 
  gather_facts: false
  hosts: "{{ HOSTS }}"
  vars:
    HOSTS:

  tasks:
    - block:

      - name: "Fail if Variable ansible_connection is winrm"
        assert:
          that:
            - ansible_connection != "winrm"
          msg: "Playbook is for linux not windows"

      rescue:
      - name: Invalid OS for this playbook
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED: {{ HOSTS }} is a windows cannot run this playbook"
        failed_when: True

#-----------------------------------------------------------------------------------
- name: Playbook use case ABC Requirement Analysis_UC_SRV_Admin_privileges_for_App_EIS V1.2
  gather_facts: false
  hosts: "{{ HOSTS }}"
  become: true
  vars:
    HOSTS:
    MEMBERS:

  tasks:
    - block:

      - name: Check if variables {{MEMBERS}} provided
        assert:
          that:
            - MEMBERS | mandatory
            - MEMBERS is defined
          msg: "Please provide variable MEMBERS"

      - name: Check if user {{MEMBERS}} exists
        shell: /usr/bin/getent passwd {{MEMBERS}}
        register: user_exist

      - name: Check if file /etc/sudoers.d/20_{{MEMBERS}} exists
        stat:
          path: /etc/sudoers.d/20_{{MEMBERS}}
        register: sudo_file


      - name: Create sudoers file for group {{MEMBERS}}
        copy:
          content: |
            # Generated by Ansible 2L22
            Defaults:{{MEMBERS}} !requiretty
            {{MEMBERS}} ALL=(ALL) ALL
          dest: '/etc/sudoers.d/20_{{MEMBERS}}'
          mode: 0440
          owner: root
          group: root
        when: sudo_file.stat.exists == False

      - name: Add the group {{MEMBERS}} to /etc/security/access.conf
        lineinfile:
          path: /etc/security/access.conf
          insertbefore: '- : ALL : ALL'
          line: '+ : ({{MEMBERS}}) : ALL'
          backup: yes
        when: sudo_file.stat.exists == False

      - name: Log output for SYNTBOT OK
        debug:
          msg: 
           - "SYNTBOT_OUTPUT: SUCCESSFUL: Add admin privilege for this account: {{MEMBERS}} on {{HOSTS}}"

      rescue:

      - name: Log output for SYNTBOT FAILED
        debug:
          msg: 
           - "SYNTBOT_OUTPUT: FAILED: Task {{ansible_failed_task.name}} failed ({{ansible_failed_result.msg}})"
        failed_when: true 
