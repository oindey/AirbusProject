---
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: localhost
  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']"
        with_items: "{{HOSTS}}"
      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED :  Task to Check if hosts exists in tower  failed on {{ HOSTS }} : Failed to find hosts in Ansible tower inventory "
        failed_when: True

# start service if not started
- name: Linux_restart_service
  gather_facts: true
  hosts: "{{ HOSTS }}"
  become: true
  vars:
    HOSTS: ''
    SERVICE: ''
    REALSERV: ''
    list_process:
      cron:
        service: crond
      crond:
        service: crond
      sshd:
        service: sshd
      syslogd:
#        service: rsyslog
        service: "{{ 'syslog' if ansible_distribution_version < '6' else 'rsyslog' }}"
      rpc.statd:
        service: nfslock
      statd:
        service: nfslock
      ntpd:
        service: ntpd
      ypbind:
        service: ypbind
      postfix:
        service: postfix

  tasks:
    - block:
      - name: "Get service name from process"
        set_fact: 
          REALSERV:  "{{ item.value.service|trim }}"
        with_dict: "{{ list_process }}"
        when: item.key == SERVICE

      - name: "Verify service name is not empty"
        fail:
          msg: "Service is unknown for process {{ SERVICE }}"
        failed_when: REALSERV|length|int < 1 

      - name: Restart service {{ REALSERV }}
        service:
          name: "{{ REALSERV }}"
          state: restarted

      - name: Check process {{ SERVICE }}
        shell: 'ps -edf |grep -v grep | grep "{{ SERVICE }}"'
        changed_when: false

      - name: Log output for SYNTBOT when successfull
        debug:
          msg:
           - "SYNTBOT_OUTPUT: SUCCESSFUL: service {{ REALSERV }} ({{ SERVICE }}) is restarted on {{ HOSTS }}"

      rescue:
      - name: Log output for SYNTBOT when failed
        debug:
          msg:
            - "SYNTBOT_OUTPUT: FAILED: Task {{ ansible_failed_task.name}} failed on {{ HOSTS }} : {{ ansible_failed_result.msg }}"
        failed_when: True
        when: ansible_failed_result.msg is defined

      - name: Log output for SYNTBOT when failed
        debug:
          msg:
            - "SYNTBOT_OUTPUT: FAILED: Task {{ ansible_failed_task.name}} failed on {{ HOSTS }}"
        failed_when: True
