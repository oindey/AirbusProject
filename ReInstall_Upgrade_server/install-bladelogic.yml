---
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: localhost

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']"
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED:  This target host {{HOSTS}} does not  exist in tower Ansible Inventory 2L22"
        failed_when: True

# install bladelogic client
- name: install bladelogic client
  hosts: "{{ HOSTS }}"
  gather_facts: false
  tasks:
    - block:
      - name: check if BMC service is defined
        win_service:
          name: RSCDsvc
        register: result
        failed_when: false
        changed_when: false

      - name: copy bladelogic client binaries from artifcatory to the target host 
        win_get_url:
          url: https://artifactory.fr.eu.airbus.corp/1Y40/R-2L22_SyntBots_generic_L/windows/2012R2/bladelogic.zip
          headers:
            X-JFrog-Art-Api: AKCp5e3outMQBxeB6mg6E54ap2mnwnVSoKv4vGr7mjk1ZmazGBiY6N5gBhSyxZdsRv89rGYJ3
          dest: C:\Temp
          force: yes
        when: result.state is not defined or result.name is not defined

      - name: Unzips bladelogic client binaries
        win_unzip:
          src: C:\Temp\bladelogic.zip
          dest: C:\Temp\
          delete_archive: yes
        when: result.state is not defined or result.name is not defined
        
      - name: install blade logic binaries
        win_command: cmd /c "C:/Temp/bladelogic/BladeLogicAgent.cmd"
        when: result.state is not defined or result.name is not defined

      - name: remove blade logic install binaries
        win_file:
          path: C:/Temp/bladelogic
          state: absent
        when: result.state is not defined or result.name is not defined

      - name: Log output when successful
        debug:
          msg:
            - "SYNTBOT_OUTPUT: SUCCESSFUL: install of blade logic on {{ ansible_host }}"

      rescue:
      - name: Log output when failed
        debug:
          msg:
            - "SYNTBOT_OUTPUT: FAILED: Task {{ ansible_failed_task.name}} failed on {{ ansible_host }} : {{ ansible_failed_result.msg }}"
        failed_when: True
